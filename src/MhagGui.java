
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JTextArea;

/**
 * @program MHAG
 * @ mhagGUI, partially generated by NetBeans IDE
 * @version 1.0
 * @author Tifa@mh3
 */

public class MhagGui extends javax.swing.JFrame {

    /** Creates new form MhagGui */
    public MhagGui() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                rankGroup = new javax.swing.ButtonGroup();
                hunterTypeGroup = new javax.swing.ButtonGroup();
                sexGroup = new javax.swing.ButtonGroup();
                outputGroup = new javax.swing.ButtonGroup();
                jTabbedPane1 = new javax.swing.JTabbedPane();
                calculator = new javax.swing.JPanel();
                rank = new javax.swing.JPanel();
                lowRank = new javax.swing.JRadioButton();
                highRank = new javax.swing.JRadioButton();
                hunterType = new javax.swing.JPanel();
                blade = new javax.swing.JRadioButton();
                gunner = new javax.swing.JRadioButton();
                sex = new javax.swing.JPanel();
                male = new javax.swing.JRadioButton();
                female = new javax.swing.JRadioButton();
                setup = new javax.swing.JPanel();
                weaponMenu = new javax.swing.JComboBox();
                headMenu = new javax.swing.JComboBox();
                chestMenu = new javax.swing.JComboBox();
                armsMenu = new javax.swing.JComboBox();
                waistMenu = new javax.swing.JComboBox();
                legsMenu = new javax.swing.JComboBox();
                charmMenu = new javax.swing.JComboBox();
                weaponLabel = new javax.swing.JLabel();
                headLabel = new javax.swing.JLabel();
                chestLabel = new javax.swing.JLabel();
                armsLabel = new javax.swing.JLabel();
                waistLabel = new javax.swing.JLabel();
                legsLabel = new javax.swing.JLabel();
                charmLabel = new javax.swing.JLabel();
                charmSkillLabel = new javax.swing.JLabel();
                weaponSlot1 = new javax.swing.JComboBox();
                weaponSlot2 = new javax.swing.JComboBox();
                weaponSlot3 = new javax.swing.JComboBox();
                headSlot1 = new javax.swing.JComboBox();
                headSlot2 = new javax.swing.JComboBox();
                headSlot3 = new javax.swing.JComboBox();
                chestSlot1 = new javax.swing.JComboBox();
                chestSlot2 = new javax.swing.JComboBox();
                chestSlot3 = new javax.swing.JComboBox();
                armSlot1 = new javax.swing.JComboBox();
                armSlot2 = new javax.swing.JComboBox();
                armSlot3 = new javax.swing.JComboBox();
                waistSlot1 = new javax.swing.JComboBox();
                waistSlot2 = new javax.swing.JComboBox();
                waistSlot3 = new javax.swing.JComboBox();
                legSlot1 = new javax.swing.JComboBox();
                legSlot2 = new javax.swing.JComboBox();
                legSlot3 = new javax.swing.JComboBox();
                charmSlot1 = new javax.swing.JComboBox();
                charmSlot2 = new javax.swing.JComboBox();
                charmSlot3 = new javax.swing.JComboBox();
                charmSkill1 = new javax.swing.JComboBox();
                charmSkill2 = new javax.swing.JComboBox();
                skillPoint1 = new javax.swing.JLabel();
                skillPoint2 = new javax.swing.JLabel();
                output = new javax.swing.JPanel();
                text = new javax.swing.JRadioButton();
                html = new javax.swing.JRadioButton();
                code = new javax.swing.JRadioButton();
                saveOutput = new javax.swing.JButton();
                jScrollPreview = new javax.swing.JScrollPane();
                jTextPreview = new javax.swing.JTextArea();
                batch = new javax.swing.JPanel();
                generator = new javax.swing.JPanel();
                about = new javax.swing.JPanel();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setResizable(false);

                rank.setBorder(javax.swing.BorderFactory.createTitledBorder("Rank"));

                rankGroup.add(lowRank);
                lowRank.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12));
                lowRank.setText("Low Rank");
                lowRank.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                lowRankActionPerformed(evt);
                        }
                });

                rankGroup.add(highRank);
                highRank.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                highRank.setSelected(true);
                highRank.setText("High Rank");
                highRank.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                highRankActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout rankLayout = new javax.swing.GroupLayout(rank);
                rank.setLayout(rankLayout);
                rankLayout.setHorizontalGroup(
                        rankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(rankLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(rankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lowRank)
                                        .addComponent(highRank))
                                .addContainerGap(14, Short.MAX_VALUE))
                );
                rankLayout.setVerticalGroup(
                        rankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(rankLayout.createSequentialGroup()
                                .addComponent(lowRank)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(highRank)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                hunterType.setBorder(javax.swing.BorderFactory.createTitledBorder("Hunter Type"));

                hunterTypeGroup.add(blade);
                blade.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12));
                blade.setSelected(true);
                blade.setText("Blademaster");
                blade.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                bladeActionPerformed(evt);
                        }
                });

                hunterTypeGroup.add(gunner);
                gunner.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12));
                gunner.setText("Gunner");
                gunner.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                gunnerActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout hunterTypeLayout = new javax.swing.GroupLayout(hunterType);
                hunterType.setLayout(hunterTypeLayout);
                hunterTypeLayout.setHorizontalGroup(
                        hunterTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(hunterTypeLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(hunterTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(blade)
                                        .addComponent(gunner))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                hunterTypeLayout.setVerticalGroup(
                        hunterTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(hunterTypeLayout.createSequentialGroup()
                                .addComponent(blade)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gunner)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                sex.setBorder(javax.swing.BorderFactory.createTitledBorder("Gender"));

                sexGroup.add(male);
                male.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12));
                male.setSelected(true);
                male.setText("Male");
                male.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                maleActionPerformed(evt);
                        }
                });

                sexGroup.add(female);
                female.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12));
                female.setText("Female");
                female.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                femaleActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout sexLayout = new javax.swing.GroupLayout(sex);
                sex.setLayout(sexLayout);
                sexLayout.setHorizontalGroup(
                        sexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(sexLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(sexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(male)
                                        .addComponent(female))
                                .addContainerGap(17, Short.MAX_VALUE))
                );
                sexLayout.setVerticalGroup(
                        sexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(sexLayout.createSequentialGroup()
                                .addComponent(male)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(female)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                setup.setBorder(javax.swing.BorderFactory.createTitledBorder("Setup"));

                weaponMenu.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                weaponMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No Slot", "1 Slot", "2 Slots", "3 Slots" }));
                weaponMenu.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                weaponMenuActionPerformed(evt);
                        }
                });

                headMenu.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                headMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));
                headMenu.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                headMenuActionPerformed(evt);
                        }
                });

                chestMenu.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                chestMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));
                chestMenu.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                chestMenuActionPerformed(evt);
                        }
                });

                armsMenu.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                armsMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));
                armsMenu.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                armsMenuActionPerformed(evt);
                        }
                });

                waistMenu.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                waistMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));
                waistMenu.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                waistMenuActionPerformed(evt);
                        }
                });

                legsMenu.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                legsMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));
                legsMenu.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                legsMenuActionPerformed(evt);
                        }
                });

                charmMenu.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                charmMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));
                charmMenu.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                charmMenuActionPerformed(evt);
                        }
                });

                weaponLabel.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                weaponLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/weapon.png"))); // NOI18N
                weaponLabel.setLabelFor(weaponMenu);
                weaponLabel.setToolTipText("Weapon");

                headLabel.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                headLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/head.png"))); // NOI18N
                headLabel.setLabelFor(headMenu);
                headLabel.setToolTipText("Head");

                chestLabel.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12));
                chestLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/chest.png"))); // NOI18N
                chestLabel.setLabelFor(chestMenu);
                chestLabel.setToolTipText("Chest");

                armsLabel.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                armsLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/arms.png"))); // NOI18N
                armsLabel.setLabelFor(armsMenu);
                armsLabel.setToolTipText("Arms");

                waistLabel.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12));
                waistLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/waist.png"))); // NOI18N
                waistLabel.setLabelFor(waistMenu);
                waistLabel.setToolTipText("Waist");

                legsLabel.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12));
                legsLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/legs.png"))); // NOI18N
                legsLabel.setLabelFor(legsMenu);
                legsLabel.setToolTipText("Legs");

                charmLabel.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                charmLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/charm.png"))); // NOI18N
                charmLabel.setLabelFor(charmMenu);
                charmLabel.setToolTipText("Charm");

                charmSkillLabel.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                charmSkillLabel.setLabelFor(charmSkill1);
                charmSkillLabel.setText("Charm Skill");

                weaponSlot1.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                weaponSlot1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));
                weaponSlot1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                weaponSlot1ActionPerformed(evt);
                        }
                });

                weaponSlot2.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                weaponSlot2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                weaponSlot3.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                weaponSlot3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                headSlot1.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                headSlot1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                headSlot2.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                headSlot2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                headSlot3.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                headSlot3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                chestSlot1.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                chestSlot1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                chestSlot2.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                chestSlot2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                chestSlot3.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                chestSlot3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                armSlot1.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                armSlot1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                armSlot2.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                armSlot2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                armSlot3.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                armSlot3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                waistSlot1.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                waistSlot1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                waistSlot2.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                waistSlot2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                waistSlot3.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                waistSlot3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                legSlot1.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                legSlot1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                legSlot2.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                legSlot2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                legSlot3.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                legSlot3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                charmSlot1.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                charmSlot1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                charmSlot2.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                charmSlot2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                charmSlot3.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                charmSlot3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                charmSkill1.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                charmSkill1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                charmSkill2.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                charmSkill2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

                skillPoint1.setLabelFor(charmSkill1);
                skillPoint1.setText("+10");

                skillPoint2.setLabelFor(charmSkill2);
                skillPoint2.setText("-10");

                javax.swing.GroupLayout setupLayout = new javax.swing.GroupLayout(setup);
                setup.setLayout(setupLayout);
                setupLayout.setHorizontalGroup(
                        setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(setupLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(setupLayout.createSequentialGroup()
                                                .addComponent(weaponLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(setupLayout.createSequentialGroup()
                                                                .addComponent(charmSkillLabel)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(charmSkill1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(skillPoint1)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(charmSkill2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(skillPoint2))
                                                        .addGroup(setupLayout.createSequentialGroup()
                                                                .addComponent(weaponMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(weaponSlot1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(weaponSlot2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(weaponSlot3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(setupLayout.createSequentialGroup()
                                                .addComponent(headLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(headMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(headSlot1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(headSlot2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(headSlot3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(setupLayout.createSequentialGroup()
                                                .addComponent(chestLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(chestMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(chestSlot1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(chestSlot2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(chestSlot3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(setupLayout.createSequentialGroup()
                                                .addComponent(armsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(armsMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(armSlot1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(armSlot2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(armSlot3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(setupLayout.createSequentialGroup()
                                                .addComponent(waistLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(waistMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(waistSlot1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(waistSlot2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(waistSlot3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(setupLayout.createSequentialGroup()
                                                .addComponent(legsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(legsMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(legSlot1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(legSlot2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(legSlot3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(setupLayout.createSequentialGroup()
                                                .addComponent(charmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(charmMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(charmSlot1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(6, 6, 6)
                                                .addComponent(charmSlot2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(charmSlot3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                setupLayout.setVerticalGroup(
                        setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(setupLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(setupLayout.createSequentialGroup()
                                                .addGap(5, 5, 5)
                                                .addComponent(weaponLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(weaponMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(weaponSlot1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(weaponSlot2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(weaponSlot3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(headSlot1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(headSlot2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(headSlot3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(headMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(setupLayout.createSequentialGroup()
                                                .addComponent(headLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(5, 5, 5)))
                                .addGap(18, 18, 18)
                                .addGroup(setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(chestMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(setupLayout.createSequentialGroup()
                                                .addComponent(chestLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(5, 5, 5))
                                        .addGroup(setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(chestSlot1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(chestSlot2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(chestSlot3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(setupLayout.createSequentialGroup()
                                                .addComponent(armsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(5, 5, 5))
                                        .addGroup(setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(armSlot2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(armSlot3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(armsMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(armSlot1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(waistMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(waistSlot1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(waistSlot2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(waistSlot3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(setupLayout.createSequentialGroup()
                                                .addComponent(waistLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(5, 5, 5)))
                                .addGap(18, 18, 18)
                                .addGroup(setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(legsMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(legSlot1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(legSlot2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(legSlot3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(setupLayout.createSequentialGroup()
                                                .addComponent(legsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(5, 5, 5)))
                                .addGap(18, 18, 18)
                                .addGroup(setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(charmMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(charmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(charmSlot1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(charmSlot2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(charmSlot3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(setupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(charmSkillLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(charmSkill1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(skillPoint1)
                                        .addComponent(charmSkill2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(skillPoint2))
                                .addContainerGap(25, Short.MAX_VALUE))
                );

                output.setBorder(javax.swing.BorderFactory.createTitledBorder("Output"));

                outputGroup.add(text);
                text.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12));
                text.setSelected(true);
                text.setText("TEXT");

                outputGroup.add(html);
                html.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12));
                html.setText("HTML");
                html.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                htmlActionPerformed(evt);
                        }
                });

                outputGroup.add(code);
                code.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12));
                code.setText("Code");

                saveOutput.setFont(new java.awt.Font("Monospaced", 0, 12));
                saveOutput.setText("Save");

                javax.swing.GroupLayout outputLayout = new javax.swing.GroupLayout(output);
                output.setLayout(outputLayout);
                outputLayout.setHorizontalGroup(
                        outputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(outputLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(outputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(outputLayout.createSequentialGroup()
                                                .addComponent(text)
                                                .addGap(18, 18, 18)
                                                .addComponent(html))
                                        .addGroup(outputLayout.createSequentialGroup()
                                                .addComponent(code)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(saveOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                outputLayout.setVerticalGroup(
                        outputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, outputLayout.createSequentialGroup()
                                .addGroup(outputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(text)
                                        .addComponent(html))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(outputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(code)
                                        .addComponent(saveOutput))
                                .addContainerGap())
                );

                jTextPreview.setColumns(20);
                jTextPreview.setEditable(false);
                jTextPreview.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
                jTextPreview.setForeground(new java.awt.Color(1, 1, 1));
                jTextPreview.setLineWrap(true);
                jTextPreview.setRows(5);
                jTextPreview.setText("================================================================================\n Medic's Set                             High Rank   Blademaster \n--------------------------------------------------------------------------------\n Weapon                                  OO-   Steadfast+ Recovery \n Grace Earring                           ---     \n Gobul Mail+                             O--   Steadfast+  \n Gobul Vambraces+                        O--   Medicine  \n Gobul Faulds+                           O--   Medicine  \n Gobul Greaves+                          OOO   Voracious  \n Rec Level +7                            OO-   Panacea  \n--------------------------------------------------------------------------------\n                     WEP HEA CHE ARM WAI LEG CHA TOT\n Max Defense         ---  10  74  74  74  74 --- 306 \n Resist: Fire        ---   0  -2  -2  -2  -2 ---  -8 \n         Water       ---   0   4   4   4   4 ---  16 \n         Ice         ---   0   0   0   0   0 ---   0 \n         Thunder     ---   0  -4  -4  -4  -4 --- -16 \n         Dragon      ---   0   2   2   2   2 ---   8 \n--------------------------------------------------------------------------------\n SKills: Wide-Range  ---  20 --- --- --- --- ---  20 → Wide-Range +2\n         Stun          2 ---   4   4   4   2 ---  16 → Negate Stun\n         Eating       -1 ---   2   4   5   5 ---  15 → Speed Eating +2\n         Rec Level   --- --- ---   1   1  -2  10  10 → Recovery Up\n         Expert      --- ---   3   2   1   2 ---   8   ---\n         Rec Speed     1 ---  -2  -2  -2  -2  -1  -8   ---\n================================================================================");
                jTextPreview.setBorder(javax.swing.BorderFactory.createTitledBorder("Preview"));
                jTextPreview.setOpaque(false);
                jScrollPreview.setViewportView(jTextPreview);

                javax.swing.GroupLayout calculatorLayout = new javax.swing.GroupLayout(calculator);
                calculator.setLayout(calculatorLayout);
                calculatorLayout.setHorizontalGroup(
                        calculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(calculatorLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(calculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(calculatorLayout.createSequentialGroup()
                                                .addComponent(rank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(hunterType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(sex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(output, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(setup, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPreview, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE))
                );
                calculatorLayout.setVerticalGroup(
                        calculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, calculatorLayout.createSequentialGroup()
                                .addGroup(calculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, calculatorLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jScrollPreview, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE))
                                        .addGroup(calculatorLayout.createSequentialGroup()
                                                .addGap(22, 22, 22)
                                                .addGroup(calculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(output, javax.swing.GroupLayout.Alignment.LEADING, 0, 89, Short.MAX_VALUE)
                                                        .addComponent(sex, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(hunterType, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(rank, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(setup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(64, 64, 64))
                );

                jTabbedPane1.addTab("Calculator", calculator);

                javax.swing.GroupLayout batchLayout = new javax.swing.GroupLayout(batch);
                batch.setLayout(batchLayout);
                batchLayout.setHorizontalGroup(
                        batchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 1203, Short.MAX_VALUE)
                );
                batchLayout.setVerticalGroup(
                        batchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 522, Short.MAX_VALUE)
                );

                jTabbedPane1.addTab("Batch", batch);

                javax.swing.GroupLayout generatorLayout = new javax.swing.GroupLayout(generator);
                generator.setLayout(generatorLayout);
                generatorLayout.setHorizontalGroup(
                        generatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 1203, Short.MAX_VALUE)
                );
                generatorLayout.setVerticalGroup(
                        generatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 522, Short.MAX_VALUE)
                );

                jTabbedPane1.addTab("Generator", generator);

                javax.swing.GroupLayout aboutLayout = new javax.swing.GroupLayout(about);
                about.setLayout(aboutLayout);
                aboutLayout.setHorizontalGroup(
                        aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 1203, Short.MAX_VALUE)
                );
                aboutLayout.setVerticalGroup(
                        aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 522, Short.MAX_VALUE)
                );

                jTabbedPane1.addTab("About", about);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPane1)
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

    private void bladeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bladeActionPerformed
	    // set to blademaster
	    if(set.getBlade() == true )return;

	    set.setBlade(true);
	    initSetup(set.getLowRank(), set.getBlade(), set.getFemale());
    }//GEN-LAST:event_bladeActionPerformed

    private void htmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_htmlActionPerformed
	    // TODO add your handling code here:
    }//GEN-LAST:event_htmlActionPerformed

    private void highRankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highRankActionPerformed
	    // set to high Rank
	    if(set.getLowRank() == false )return;

	    set.setLowRank(false);
	    initSetup(set.getLowRank(), set.getBlade(), set.getFemale());
    }//GEN-LAST:event_highRankActionPerformed

    private void lowRankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lowRankActionPerformed
	    // set to Low Rank
	    if(set.getLowRank() == true )return;

	    set.setLowRank(true);
	    initSetup(set.getLowRank(), set.getBlade(), set.getFemale());
    }//GEN-LAST:event_lowRankActionPerformed

    private void gunnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gunnerActionPerformed
	    // set to blademaster
	    if(set.getBlade() == false )return;

	    set.setBlade(false);
	    initSetup(set.getLowRank(), set.getBlade(), set.getFemale());
    }//GEN-LAST:event_gunnerActionPerformed

    private void maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleActionPerformed
	    // set to male
	    if(set.getFemale() == false )return;

	    set.setFemale(false);
	    // TODO get & keep armorID

	    initSetup(set.getLowRank(), set.getBlade(), set.getFemale());
    }//GEN-LAST:event_maleActionPerformed

    private void femaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleActionPerformed
	    // set to female
	    if(set.getFemale() == true )return;

	    set.setFemale(true);
	    // TODO get & keep armorID

	    initSetup(set.getLowRank(), set.getBlade(), set.getFemale());
    }//GEN-LAST:event_femaleActionPerformed

    private void headMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_headMenuActionPerformed
	    armorMenuAction(0);
    }//GEN-LAST:event_headMenuActionPerformed

    private void chestMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chestMenuActionPerformed
	    armorMenuAction(1);
    }//GEN-LAST:event_chestMenuActionPerformed

    private void armsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_armsMenuActionPerformed
	    armorMenuAction(2);
    }//GEN-LAST:event_armsMenuActionPerformed

    private void waistMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waistMenuActionPerformed
	    armorMenuAction(3);
    }//GEN-LAST:event_waistMenuActionPerformed

    private void legsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_legsMenuActionPerformed
	    armorMenuAction(4);
    }//GEN-LAST:event_legsMenuActionPerformed

    private void weaponMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weaponMenuActionPerformed

	   int ind = weaponMenu.getSelectedIndex();
	   int bodyPart = 5;

	   if(ind <= 0 )
	   {
		   set.setInUse(bodyPart, false);
		   set.setNumJewel(bodyPart, 0);  //initiate jewel
		   for (int i = 1; i <= 3; i++)  //start from 1
		   {
			   changeJewelSlot(bodyPart, i, set.getLowRank(), 0, false);
		   }
		   calSetGUI();
	   }
	   else
	   {
		   set.setInUse(bodyPart, true);

		   // get number of slots
		   int nSlot = ind;
		   //initialiate jewel menu lists
		   set.setNumJewel(bodyPart, 0);
		   for (int i = 1; i <= nSlot; i++)  //start from 1
			   changeJewelSlot(bodyPart, i, set.getLowRank(), nSlot, true);
		   for (int i = nSlot+1; i <= 3; i++)
			   changeJewelSlot(bodyPart, i, set.getLowRank(), 0, false);

	   }

    }//GEN-LAST:event_weaponMenuActionPerformed

    private void charmMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_charmMenuActionPerformed

	   int ind = charmMenu.getSelectedIndex();
	   int bodyPart = 6;

	   if(ind <= 0 )
	   {
		   set.setInUse(bodyPart, false);
		   set.setNumJewel(bodyPart, 0);  //initiate jewel
		   for (int i = 1; i <= 3; i++)  //start from 1
			   changeJewelSlot(bodyPart, i, set.getLowRank(), 0, false);
		   calSetGUI();
	   }
	   else
	   {
		   //obtain list value
		   int[] list = mhagData.getCharmList(set.getLowRank());
		   int charmID = list[ind];
		   if(set.getCharmID() == charmID)return; // no change

		   // set Jewel id
		   set.setInUse(bodyPart, true);
		   set.setCharmID(charmID);

		   // get number of slots
		   Charm charm = mhagData.getCharm(charmID);
		   int nSlot = charm.getNumSlot();
		   //initialiate jewel menu lists
		   set.setNumJewel(bodyPart, 0);
		   for (int i = 1; i <= 3; i++) //start from 1
		   {
			   if(i <= nSlot)
				   changeJewelSlot(bodyPart, i, set.getLowRank(), nSlot, true);
			   else
				   changeJewelSlot(bodyPart, i, set.getLowRank(), 0, false);
		   }
		   //change charmSkill

		   int nSkill = charm.getNumSkill();

		   if(nSkill == 1)
		   {
			   String skillClass = charm.getSkillClass()[0];
			   changeCharmSkill(0, skillClass, true);
			   skillPoint1.setText(String.format(
				   "%+d",charm.getSkillPoint()[0]));
			   changeCharmSkill(1, "C", false);
			   skillPoint2.setText("");
		   }
		   else if(nSkill == 2)
		   {
			   String skillClass = charm.getSkillClass()[0];
			   changeCharmSkill(0, skillClass, true);
			   skillPoint1.setText(String.format(
				   "%+d",charm.getSkillPoint()[0]));
			   skillClass = charm.getSkillClass()[1];
			   changeCharmSkill(1, skillClass, true);
			   skillPoint2.setText(String.format(
				   "%+d",charm.getSkillPoint()[1]));
		   }
		   else
		   {
			   changeCharmSkill(0, "C", false);
			   skillPoint1.setText("");
			   changeCharmSkill(1, "C", false);
			   skillPoint2.setText("");
		   }


	   }
    }//GEN-LAST:event_charmMenuActionPerformed

    private void weaponSlot1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weaponSlot1ActionPerformed
	    // weapon slot 1
    }//GEN-LAST:event_weaponSlot1ActionPerformed

    private void armorMenuAction(int bodyPart)
    {
	   JComboBox bodyMenu = getArmorMenuObj(bodyPart);

	   int ind = bodyMenu.getSelectedIndex();

	   if(ind <= 0 )
	   {
		   set.setInUse(bodyPart, false);
		   set.setNumJewel(bodyPart, 0);  //initiate jewel
		   for (int i = 1; i <= 3; i++)  //start from 1
			   changeJewelSlot(bodyPart, i, set.getLowRank(), 0, false);
		   calSetGUI();
	   }
	   else
	   {
		   // obtain list value
		   int[] list = mhagData.getArmorList(set.getLowRank(),
			   set.getBlade(), set.getFemale(), bodyPart);
		   int armorID = list[ind];
		   if(armorID == set.getArmorID()[bodyPart])return; //no change, no reset

		   // set armor id
		   set.setInUse(bodyPart, true);
		   set.setArmorID(bodyPart, armorID);

		   // get number of slots
		   Armor armor = mhagData.getArmor(bodyPart, armorID);
		   int nSlot = armor.getNumSlot();
		   //initialiate jewel menu lists
		   set.setNumJewel(bodyPart, 0);
		   for (int i = 1; i <= nSlot; i++)  //start from 1
			   changeJewelSlot(bodyPart, i, set.getLowRank(), nSlot, true);
		   for (int i = nSlot+1; i <= 3; i++)
			   changeJewelSlot(bodyPart, i, set.getLowRank(), 0, false);
	   }
    }

    private void jewelSlotAction(int bodyPart, int slotInd)
    {

	   int num = 0;
	   for(int i = 0; i < 3; i++)
	   {
		   JComboBox jewelSlot = getJewelSlotObj(bodyPart, i);

		   int ind = jewelSlot.getSelectedIndex();

		   if(ind <= 0 )continue;
//		   int[] list = mhagData.getJewelList(set.getLowRank(), nSlot);
//		   set.setJewelID(bodyPart, slotInd, )
		   num++;
	   }
	   set.setNumJewel(bodyPart, num);



    }


    private static void initMhag() throws FileNotFoundException
    {
	mhag.setMethod(0);  // default method: calculator
	mhag.setLogOpt(0);  // log in console screen
	//mhag.setLogOpt(2);  // turn off log
	mhag.prepareLogFile();

	mhag.showMhagInfo(); //display MHAG welcome info
	mhagData.readFile(mhag); //read file
	mhagData.dataPreProc();  //pre process

	set.init();
	for(int i = 0; i < 7; i++)
		Arrays.fill(slotMenuType[i], 0);


    }

    /**
    * @param args the command line arguments
    */

    public JComboBox getArmorMenuObj(int bodyPart)
    {
	    JComboBox bodyMenu;
	    if(bodyPart == 0)
		    bodyMenu = headMenu;
	    else if(bodyPart == 1)
		    bodyMenu = chestMenu;
	    else if(bodyPart == 2)
		    bodyMenu = armsMenu;
	    else if(bodyPart == 3)
		    bodyMenu = waistMenu;
	    else
		    bodyMenu = legsMenu;

	    return bodyMenu;
    }

    public JComboBox getJewelSlotObj(int bodyPart, int slotInd)
    {
	    JComboBox jewelSlot;
	    if(bodyPart == 0)
	    {
		    if(slotInd == 1)
		    {
			    jewelSlot = headSlot1;
		    }
		    else if(slotInd == 2)
		    {
			    jewelSlot = headSlot2;
		    }
		    else
		    {
			    jewelSlot = headSlot3;
		    }
	    }
	    else if(bodyPart == 1)
	    {
		    if(slotInd == 1)
		    {
			    jewelSlot = chestSlot1;
		    }
		    else if(slotInd == 2)
		    {
			    jewelSlot = chestSlot2;
		    }
		    else
		    {
			    jewelSlot = chestSlot3;
		    }
	    }
	    else if(bodyPart == 2)
	    {
		    if(slotInd == 1)
		    {
			    jewelSlot = armSlot1;
		    }
		    else if(slotInd == 2)
		    {
			    jewelSlot = armSlot2;
		    }
		    else
		    {
			    jewelSlot = armSlot3;
		    }
	    }
	    else if(bodyPart == 3)
	    {
		    if(slotInd == 1)
		    {
			    jewelSlot = waistSlot1;
		    }
		    else if(slotInd == 2)
		    {
			    jewelSlot = waistSlot2;
		    }
		    else
		    {
			    jewelSlot = waistSlot3;
		    }
	    }
	    else if(bodyPart == 4)
	    {
		    if(slotInd == 1)
		    {
			    jewelSlot = legSlot1;
		    }
		    else if(slotInd == 2)
		    {
			    jewelSlot = legSlot2;
		    }
		    else
		    {
			    jewelSlot = legSlot3;
		    }
	    }
	    else if(bodyPart == 5)  //weapon
	    {
		    if(slotInd == 1)
		    {
			    jewelSlot = weaponSlot1;
		    }
		    else if(slotInd == 2)
		    {
			    jewelSlot = weaponSlot2;
		    }
		    else
		    {
			    jewelSlot = weaponSlot3;
		    }
	    }
	    else //charm slots
	    {
		    if(slotInd == 1)
		    {
			    jewelSlot = charmSlot1;
		    }
		    else if(slotInd == 2)
		    {
			    jewelSlot = charmSlot2;
		    }
		    else
		    {
			    jewelSlot = charmSlot3;
		    }
	    }
	    return jewelSlot;

    }

    public void changeArmorMenu(int bodyPart,boolean lowRank, boolean blade,
	    boolean female, boolean active)
    {
	    JComboBox bodyMenu = getArmorMenuObj(bodyPart);

	    if(!active)
	    {
		    bodyMenu.setVisible(false);
		    return;
	    }

	    int[] ind = mhagData.getArmorList(lowRank, blade, female, bodyPart);
	    int num = ind.length;
	    String[] name = mhagData.getArmorListMenu(bodyPart, female, num, ind);

	    bodyMenu.removeAllItems();
	    for(int i = 0; i < num; i++)
	    {
		    bodyMenu.addItem(name[i]);
	    }

	    bodyMenu.setVisible(true);

    }

    public void changeJewelSlot(int bodyPart, int slotInd,
	    boolean lowRank, int nSlot, boolean active)
    {

	    JComboBox jewelSlot = getJewelSlotObj(bodyPart, slotInd);

	    if(!active)
	    {
		    jewelSlot.setVisible(false);
		    return;
	    }

	    int[] ind = mhagData.getJewelList(lowRank, nSlot);
	    int num = ind.length;

	    jewelSlot.removeAllItems();
	    jewelSlot.addItem("---"); //1st null item
	    for(int i = 1; i < num; i++)
	    {
 		    Jewel jewel = mhagData.getJewel(ind[i]);
		    jewelSlot.addItem(jewel.getJewelNameSkill());
	    }
	    jewelSlot.setVisible(true);

    }

    public void changeCharmSkill(int skillNo,String skillClass, boolean active)
    {
	    JComboBox skillSlot;
	    JLabel skillLabel;
	    if(skillNo == 0)
	    {
		    skillSlot = charmSkill1;
		    skillLabel = skillPoint1;
	    }
	    else
	    {
		    skillSlot = charmSkill2;
		    skillLabel = skillPoint2;
	    }

	    if(!active)
	    {
		    skillSlot.setVisible(false);
		    skillLabel.setVisible(false);
		    return;
	    }

		int[] ind = mhagData.getSkillList(skillClass);
		int num = ind.length;

		skillSlot.removeAllItems();
		skillSlot.addItem("---"); //1st null item
		for(int i = 1; i < num; i++)
		{
			Skill skill = mhagData.getSkill(ind[i]);
			skillSlot.addItem(skill.getSkillName());
		}

	    skillSlot.setVisible(true);
	    skillLabel.setVisible(true);
    }

    public void changeCharmMenu(boolean lowRank)
    {

		int[] ind = mhagData.getCharmList(lowRank);
		int num = ind.length;

		charmMenu.removeAllItems();
		charmMenu.addItem("---"); //1st null item
		for(int i = 1; i < num; i++)
		{
			Charm charm = mhagData.getCharm(ind[i]);
			charmMenu.addItem(charm.getCharmName());
		}

	   charmMenu.setVisible(true);

    }

    public void initSetup(boolean lowRank, boolean blade, boolean female)
    {
	    for(int i = 0; i < 5; i++)
		    changeArmorMenu(i, lowRank, blade, female, true);

	    for(int i = 0; i < 7; i++)
	    {
		    for(int j = 1; j < 4; j++) // number 1-3
		    {
			changeJewelSlot(i, j, lowRank, 0, false);
		    }
	    }


	    changeCharmMenu(lowRank);

	    for(int i = 0; i < 2; i++)
		    changeCharmSkill(i, "C", false);

    }

    public void calSetGUI()
    {
	   set.calcSet(mhag, mhagData);   //calculate set

	   stream.reset();
  	   set.save(mhag, mhagData, stream);  // save results
    }

    public void setupSystemOut(JTextArea area)
    {
    }

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                MhagGui mhagGui = new MhagGui();

		try {
			initMhag();  // initialize mhag
		} catch (FileNotFoundException ex) {
			Logger.getLogger(MhagGui.class.getName()).log(Level.SEVERE, null, ex);
		}

		stream = new TextAreaPrintStream(mhagGui.jTextPreview, System.out);

		mhagGui.setVisible(true);

		mhagGui.initSetup(false, true, false); // by default



            }
        });
    }

    	// GUI static MHAG
    	private static Mhag mhag = new Mhag();
    	private static Set set = new Set();
    	private static MhagData mhagData = new MhagData();
	private static TextAreaPrintStream stream;
	private static int[][] slotMenuType = new int[7][3];

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JPanel about;
        private javax.swing.JComboBox armSlot1;
        private javax.swing.JComboBox armSlot2;
        private javax.swing.JComboBox armSlot3;
        private javax.swing.JLabel armsLabel;
        private javax.swing.JComboBox armsMenu;
        private javax.swing.JPanel batch;
        private javax.swing.JRadioButton blade;
        private javax.swing.JPanel calculator;
        private javax.swing.JLabel charmLabel;
        private javax.swing.JComboBox charmMenu;
        private javax.swing.JComboBox charmSkill1;
        private javax.swing.JComboBox charmSkill2;
        private javax.swing.JLabel charmSkillLabel;
        private javax.swing.JComboBox charmSlot1;
        private javax.swing.JComboBox charmSlot2;
        private javax.swing.JComboBox charmSlot3;
        private javax.swing.JLabel chestLabel;
        private javax.swing.JComboBox chestMenu;
        private javax.swing.JComboBox chestSlot1;
        private javax.swing.JComboBox chestSlot2;
        private javax.swing.JComboBox chestSlot3;
        private javax.swing.JRadioButton code;
        private javax.swing.JRadioButton female;
        private javax.swing.JPanel generator;
        private javax.swing.JRadioButton gunner;
        private javax.swing.JLabel headLabel;
        private javax.swing.JComboBox headMenu;
        private javax.swing.JComboBox headSlot1;
        private javax.swing.JComboBox headSlot2;
        private javax.swing.JComboBox headSlot3;
        private javax.swing.JRadioButton highRank;
        private javax.swing.JRadioButton html;
        private javax.swing.JPanel hunterType;
        private javax.swing.ButtonGroup hunterTypeGroup;
        private javax.swing.JScrollPane jScrollPreview;
        private javax.swing.JTabbedPane jTabbedPane1;
        private javax.swing.JTextArea jTextPreview;
        private javax.swing.JComboBox legSlot1;
        private javax.swing.JComboBox legSlot2;
        private javax.swing.JComboBox legSlot3;
        private javax.swing.JLabel legsLabel;
        private javax.swing.JComboBox legsMenu;
        private javax.swing.JRadioButton lowRank;
        private javax.swing.JRadioButton male;
        private javax.swing.JPanel output;
        private javax.swing.ButtonGroup outputGroup;
        private javax.swing.JPanel rank;
        private javax.swing.ButtonGroup rankGroup;
        private javax.swing.JButton saveOutput;
        private javax.swing.JPanel setup;
        private javax.swing.JPanel sex;
        private javax.swing.ButtonGroup sexGroup;
        private javax.swing.JLabel skillPoint1;
        private javax.swing.JLabel skillPoint2;
        private javax.swing.JRadioButton text;
        private javax.swing.JLabel waistLabel;
        private javax.swing.JComboBox waistMenu;
        private javax.swing.JComboBox waistSlot1;
        private javax.swing.JComboBox waistSlot2;
        private javax.swing.JComboBox waistSlot3;
        private javax.swing.JLabel weaponLabel;
        private javax.swing.JComboBox weaponMenu;
        private javax.swing.JComboBox weaponSlot1;
        private javax.swing.JComboBox weaponSlot2;
        private javax.swing.JComboBox weaponSlot3;
        // End of variables declaration//GEN-END:variables

}
